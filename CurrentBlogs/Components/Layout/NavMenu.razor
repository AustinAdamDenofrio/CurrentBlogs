@implements IDisposable

@inject NavigationManager NavigationManager


<!-- Navbar. Remove 'fixed-top' class to make the navigation bar scrollable with the page -->
<header class="navbar navbar-expand-lg fixed-top bg-light">
    <div class="container">

        <!-- Navbar brand (Logo) -->
        
        <a class="navbar-brand pe-sm-3" href="/">
            <span class="text-primary flex-shrink-0 me-2">
                <img width="35" height="32" src="Images/Logo_Dark_NoText.svg" />
            </span>
            Current Blogs
        </a>

        <!-- Mobile menu toggler (Hamburger) -->
        <button class="navbar-toggler ms-sm-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navbar collapse (Main navigation) -->
        <nav class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav navbar-nav-scroll me-auto" style="--ar-scroll-height: 520px;">

                <li class="nav-item">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All"> 
                        Home  
                    </NavLink>
                </li>



                <li class="nav-item dropdown">
                    <NavLink class="nav-link dropdown-toggle" href="categories" Match="NavLinkMatch.Prefix"  data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                        Categories
                    </NavLink>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/categories">Catagory 1</a></li>
                        <li><a class="dropdown-item" href="#">Catagory 2</a></li>
                        <li><a class="dropdown-item" href="#">Catagory 3</a></li>
                    </ul>
                </li>


                @*Author Menu Only*@
                <AuthorizeView Roles="Author">
                    <li class="nav-item dropdown">
                        <NavLink class="nav-link dropdown-toggle" href="Author" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                            Author Menu
                        </NavLink>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/author/categories">Manage Categories</a></li>
                            <li><a class="dropdown-item" href="/posts/create">New Post</a></li>
                            <li><a class="dropdown-item" href="#">Manage Posts</a></li>
                        </ul>
                    </li>
                </AuthorizeView>


                <AuthorizeView>
                    @*Logged In*@
                    <Authorized>
                        <li class="nav-item dropdown">
                            <NavLink class="nav-link dropdown-toggle" href="account" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                @(context.User?.Identity?.Name ?? "Account")
                            </NavLink>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="Account/Manage">Profile</a></li>
                                <li>
                                    <form class="dropdown-item" action="Account/Logout" method="post">
                                        <AntiforgeryToken />
                                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                        <button type="submit" class="nav-link">
                                            Logout
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </li>


                    </Authorized>
                    @*Not logged in*@
                    <NotAuthorized>
                        <li>
                            <NavLink class="nav-link" href="Account/Login" Match="NavLinkMatch.All">Login</NavLink>
                        </li>

                    </NotAuthorized>
                <!-- ToDo: Push account to the right side -->
                </AuthorizeView>



            </ul>

        </nav>
    </div>
</header>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
