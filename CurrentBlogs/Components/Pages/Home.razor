@page "/"

@layout SideBarLayout

@inject ICategoryDTOService CategoryService
@inject IBlogPostDTOService BlogPostService

@rendermode InteractiveServer

<PageTitle>Home | All Blog Posts</PageTitle>

<!-- Blog posts -->

<h1 class="pb-3 pb-lg-4">All Blogs</h1>

<!-- Post -->
@foreach (BlogPostDTO blogPost in blogPosts.Data)
{
    @if (blogPost.IsPublished == true && blogPost.IsDeleted == false)
    {
        <BlogCard BlogPost="blogPost" />
    }
}



<Paginator @rendermode="InteractiveAuto"
            TotalPages="blogPosts.TotalPages"/>

<TagSelectionCard Tags="allPublishedTags"/>


@code {
    #region Parameter
    [SupplyParameterFromQuery]
    public int Page { get; set; }
    #endregion

    #region State
    bool currentPageIsGenerated = false;
    private int pageSize = 4;

    private PagedList<BlogPostDTO> blogPosts = new PagedList<BlogPostDTO>();
    private List<TagDTO> allPublishedTags = [];
    #endregion

    #region Methods
    protected override async Task OnParametersSetAsync()
    {
        if (Page < 1) Page = 1;

        try
        {
            //Get All Posts
            blogPosts = await BlogPostService.GetPublishedBlogPostsAsync(Page, pageSize);

            foreach (BlogPostDTO post in blogPosts.Data)
            {
                foreach (TagDTO tag in post.Tags)
                {
                    if (!allPublishedTags.Any(t => t.Id == tag.Id))
                    {
                        allPublishedTags.Add(tag);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

    }

    #endregion
}