@page "/category/{categoryId:int}"
@inject ICategoryDTOService CategoryService
@inject IBlogPostDTOService BlogService
@inject NavigationManager Nav

@layout SideBarLayout


<!-- Blog posts -->
@if (category is not null)
{
    <PageTitle> Current Blogs | Category: @category.Name</PageTitle>

    <h1>Category: "@category.Name"</h1>

    @foreach (BlogPostDTO blogPost in blogPosts.Data)
    {
        @if (blogPost.IsPublished == true && blogPost.IsDeleted == false)
        {
            <BlogCard BlogPost="blogPost" />
        }
    }
}
<!-- Post -->



<Paginator @rendermode="InteractiveAuto"
           TotalPages="blogPosts.TotalPages" />




@code {
    #region Parameters
    [Parameter]
    public int CategoryId { get; set; }

    [SupplyParameterFromQuery]
    public int Page { get; set; }


    #endregion

    #region State
    private int pageSize = 5;
    bool currentPageIsGenerated = false;
    private PagedList<BlogPostDTO> blogPosts = new PagedList<BlogPostDTO>();
    private CategoryDTO? category;
    #endregion


    #region Methods
    protected override async Task OnParametersSetAsync()
    {
        if (Page < 1)
        {
            Page = 1;
        }

        category = await CategoryService.GetCategoryByIdAsync(CategoryId);

        if (category is null)
        {
            Nav.NavigateTo("/");
        }
        blogPosts = await BlogService.GetPostsByCategoryId(CategoryId, Page, pageSize);
    }


    #endregion
}
