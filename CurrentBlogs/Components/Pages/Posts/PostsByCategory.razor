@page "/category/{categoryId:int}"
@inject ICategoryDTOService CategoryService
@inject IBlogPostDTOService BlogService
@inject NavigationManager Nav

@layout SideBarLayout


<!-- Blog posts -->
@if (category is not null)
{
    <PageTitle> Current Blogs | Category: @category.Name</PageTitle>

    <h1>Category: "@category.Name"</h1>

    @foreach (BlogPostDTO blogPost in blogPosts.Data)
    {
        @if (blogPost.IsPublished == true && blogPost.IsDeleted == false)
        {
            <BlogCard BlogPost="blogPost" />
        }
    }
}
<!-- Post -->



<div class="row gy-3 align-items-center mt-lg-5 pt-2 pt-md-3 pt-lg-0 mb-md-2 mb-xl-4">
    <div class="col col-md-2 col-6 order-md-1 order-1">
        <div class="d-flex align-items-center">
            <span class="text-body-secondary fs-sm">Show</span>
            <select class="form-select form-select-flush w-auto">
                <option value="6">6</option>
                <option value="9" selected>9</option>
                <option value="12">12</option>
                <option value="24">24</option>
            </select>
        </div>
    </div>
    <div class="col col-md-4 col-6 order-md-2 order-2">
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-sm justify-content-end">
                <li class="page-item active" aria-current="page">
                    <span class="page-link">1<span class="visually-hidden">(current)</span></span>
                </li>


                <li class="page-item"><a class="page-link" href="/?page=@blogPosts.Page">@blogPosts.Page</a></li>

                <li class="page-item"><a class="page-link" href="/?page=2">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">4</a></li>
                <li class="page-item"><a class="page-link" href="#">5</a></li>
            </ul>
        </nav>
    </div>
    <div class="col col-md col-12 order-md-2 order-3">
        <div class="d-flex justify-content-end">
            @if (Page > 1)
            {
                <a class="btn btn-outline-secondary w-md-auto w-100 btn-sm" href="/?page=@(Page - 1)" type="button">
                    Prev page
                </a>
            }
            @if (Page < blogPosts.TotalPages)
            {
                <a class="btn btn-outline-secondary w-md-auto w-100 btn-sm ms-md-1" type="button" href="/?page=@(Page + 1)">
                    Next page
                </a>
            }
            <span class="badge text-bg-dark text-white d-flex align-items-center ms-md-1">Page @blogPosts.Page of @blogPosts.TotalPages</span>
        </div>
    </div>
</div>




@code {
    #region Parameters
    [Parameter]
    public int CategoryId { get; set; }

    [SupplyParameterFromQuery]
    public int Page { get; set; }


    #endregion

    #region State
    private int pageSize = 5;
    bool currentPageIsGenerated = false;
    private PagedList<BlogPostDTO> blogPosts = new PagedList<BlogPostDTO>();
    private CategoryDTO? category;
    #endregion


    #region Methods
    protected override async Task OnParametersSetAsync()
    {
        if (Page < 1)
        {
            Page = 1;
        }

        category = await CategoryService.GetCategoryByIdAsync(CategoryId);

        if (category is null)
        {
            Nav.NavigateTo("/");
        }
        blogPosts = await BlogService.GetPostsByCategoryId(CategoryId, Page, pageSize);
    }


    #endregion
}
